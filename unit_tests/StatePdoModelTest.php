<?php

namespace CougarTutorial\UnitTests;

use CougarTutorial\Models\StatePdo;
use Cougar\PDO\PDO;

require_once(__DIR__ . "/../init.php");

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-13 at 10:56:44.
 */
class StatePdoTest extends \PHPUnit_Framework_TestCase {
	/**
	 * var Cougar\Security\iSecurity Security context
	 */
	protected $security;

	/**
	 * var \PDO Database connection
	 */
	protected $pdo;

	/**
	 * var Cougar\Cache\iCache Cache mock
	 */
	protected $cache;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		// Get security object mock
        $this->security = $this->getMock("\\Cougar\\Security\\Security");

        // Create mock cache to disable it and ensure everything goes through DB
        $this->cache = $this->getMock("\\Cougar\\Cache\\Cache");
        $this->cache->expects($this->any())
            ->method("get")
            ->will($this->returnValue(false));
        $this->cache->expects($this->any())
            ->method("set")
            ->will($this->returnValue(false));

		// Use local SQLite database
		$this->pdo = new PDO("sqlite:" . __DIR__ .
			"/../db/cougar_tutorial.db");
	}

	/**
	 * Tests the ability to read the record for Utah
	 * 
	 * @covers CougarTutorial\StatePdo::__construct
	 */
	public function testUtah() {
		// Load the state information
		$utah = new StatePdo($this->security, $this->cache, $this->pdo,
			array("stateId" => "UT"));

		// Verify the information
		$this->assertEquals("UT", $utah->stateId);
		$this->assertEquals("Utah", $utah->name);
		$this->assertEquals("Salt Lake City", $utah->capital);
		$this->assertEquals("Salt Lake City", $utah->largestCity);
		$this->assertEquals("1896-01-04", (string) $utah->unionDate);
		$this->assertGreaterThan(1000, $utah->landArea);
		$this->assertEquals(29, $utah->counties);
		$this->assertGreaterThan(1000000, $utah->population);
	}

	/**
	 * Tests the ability to read the record for California
	 * 
	 * @covers CougarTutorial\StatePdo::__construct
	 */
	public function testCalifornia() {
		// Load the state information
		$california = new StatePdo($this->security, $this->cache,
			$this->pdo, array("stateId" => "CA"));

		// Verify the information
		$this->assertEquals("CA", $california->stateId);
		$this->assertEquals("California", $california->name);
		$this->assertEquals("Sacramento", $california->capital);
		$this->assertEquals("Los Angeles", $california->largestCity);
		$this->assertEquals("1850-09-09", (string) $california->unionDate);
		$this->assertGreaterThan(1000, $california->landArea);
		$this->assertEquals(58, $california->counties);
		$this->assertGreaterThan(1000000, $california->population);
	}

	/**
	 * Tests getting a state that doesn't exist
	 * 
	 * @covers CougarTutorial\StatePdo::__construct
	 * @expectedException \Cougar\Exceptions\RecordNotFoundException
	 */
	public function testRecordNotFound() {
		// Load the state of confusion
		$confusion = new StatePdo($this->security, $this->cache,
			$this->pdo, array("stateId" => "confusion"));
		$this->fail("Expected exception was not thrown");
	}
	/**
	 * Tests getting the list of states
	 * 
	 * @covers CougarTutorial\StatePdo::query
	 */
	public function testQuery() {
		// Load a list of all states
		$state = new StatePdo($this->security, $this->cache, $this->pdo);
		$state_list = $state->query();
		$this->assertCount(50, $state_list);
	}
}
